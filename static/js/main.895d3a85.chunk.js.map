{"version":3,"sources":["Components/FilterSearch/Filter.module.css","Components/AddContacts/AddContacts.module.css","Components/ContactItem/ContactItem.jsx","Components/ContactList/ContactsList.jsx","Components/AddContacts/AddContact.jsx","Components/FilterSearch/FilterSearch.jsx","index.js","App.jsx","Components/ContactItem/ContactListItem.module.css"],"names":["module","exports","ContactItem","contact","deleteContact","className","styles","ContactListItem","name","phone","Button","onClick","id","ContactsList","contacts","map","key","AddContact","addContact","useState","setName","setPhone","onSubmit","e","preventDefault","shortid","generate","Form","Input","placeholder","type","value","onChange","target","autoComplete","FilterSearch","filter","setFilter","ReactDOM","render","setContacts","useEffect","localStorage","getItem","JSON","parse","error","console","log","setItem","stringify","undefined","find","item","toLowerCase","prev","NotificationManager","warning","includes","document","getElementById"],"mappings":"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","file":"static/js/main.895d3a85.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Filter_Input__1c6cN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Label\":\"AddContacts_Label__r-pYe\",\"Label__text\":\"AddContacts_Label__text__1uKHL\",\"Input\":\"AddContacts_Input__2Z1mf\",\"Button\":\"AddContacts_Button__1AU6y\"};","import React from 'react';\nimport T from 'prop-types';\nimport styles from './ContactListItem.module.css';\n\nconst ContactItem = ({ contact, deleteContact }) => {\n  return (\n    <li className={styles.ContactListItem}>\n      <p>\n        {contact.name} : {contact.phone}\n      </p>\n      <button\n        className={styles.Button}\n        onClick={() => deleteContact(contact.id)}\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\n\nContactItem.propTypes = {\n  contact: T.object.isRequired,\n  deleteContact: T.func.isRequired,\n};\n\nexport default ContactItem;\n","import React from 'react';\nimport ContactItem from '../ContactItem/ContactItem';\nimport T from 'prop-types';\n\nconst ContactsList = ({ contacts, deleteContact }) => {\n  return (\n    <ul>\n      {contacts.map(contact => (\n        <ContactItem\n          key={contact.id}\n          contact={contact}\n          deleteContact={deleteContact}\n        />\n      ))}\n    </ul>\n  );\n};\n\nContactsList.propTypes = {\n  contacts: T.array.isRequired,\n  deleteContact: T.func.isRequired,\n};\n\nexport default ContactsList;\n","import React, { useState } from 'react';\nimport styles from './AddContacts.module.css';\nimport shortid from 'shortid';\nimport T from 'prop-types';\n\nconst AddContact = ({ addContact }) => {\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n\n  const handleSubmitForm = e => {\n    e.preventDefault();\n    addContact({\n      id: shortid.generate(),\n      name,\n      phone,\n    });\n    setName('');\n    setPhone('');\n  };\n\n  return (\n    <form onSubmit={handleSubmitForm} className={styles.Form}>\n      <input\n        className={styles.Input}\n        placeholder=\"Name\"\n        type=\"text\"\n        name=\"name\"\n        value={name}\n        onChange={e => setName(e.target.value)}\n        autoComplete=\"off\"\n      />\n\n      <input\n        className={styles.Input}\n        placeholder=\"Phone\"\n        type=\"number\"\n        name=\"phone\"\n        value={phone}\n        onChange={e => setPhone(e.target.value)}\n        autoComplete=\"off\"\n      />\n\n      <button className={styles.Button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nAddContact.propTypes = {\n  addContact: T.func.isRequired,\n};\n\nexport default AddContact;\n","import React from 'react';\nimport T from 'prop-types';\nimport styles from './Filter.module.css';\n\nconst FilterSearch = ({ filter, setFilter }) => {\n  return (\n    <div>\n      <input\n        className={styles.Input}\n        type=\"text\"\n        value={filter}\n        onChange={e => setFilter(e.target.value)}\n        id=\"search\"\n        autoComplete=\"off\"\n        placeholder={'Search'}\n      />\n      Search contact\n    </div>\n  );\n};\n\nFilterSearch.propTypes = {\n  filter: T.string.isRequired,\n  setFilter: T.func.isRequired,\n};\n\nexport default FilterSearch;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","import React, { useState, useEffect } from 'react';\nimport ContactList from './Components/ContactList/ContactsList';\nimport AddContact from './Components/AddContacts/AddContact';\nimport FilterSearch from './Components/FilterSearch/FilterSearch';\nimport 'react-notifications/lib/notifications.css';\nimport {\n  NotificationContainer,\n  NotificationManager,\n} from 'react-notifications';\n\nexport default function App() {\n  const [contacts, setContacts] = useState([]);\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    try {\n      const value = localStorage.getItem('contacts');\n      if (!value) {\n        return;\n      }\n      setContacts(JSON.parse(value));\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const addContact = contact => {\n    const unique = contacts.find(\n      item => item.name.toLowerCase() === contact.name,\n    );\n\n    if (unique !== undefined) {\n      NotificationManager.warning(\n        `${contact.name} already exist`,\n        'Try another name',\n        3000,\n      );\n      return;\n    }\n\n    setContacts(prev => [contact, ...prev]);\n  };\n  const deleteContact = id => {\n    setContacts(prev => prev.filter(contact => contact.id !== id));\n  };\n\n  const filteredContacts = () => {\n    return contacts.filter(item =>\n      item.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  return (\n    <>\n      <AddContact addContact={contact => addContact(contact)} />\n      <FilterSearch filter={filter} setFilter={setFilter} />\n      <ContactList\n        contacts={filteredContacts()}\n        deleteContact={deleteContact}\n      />\n      <NotificationContainer />\n    </>\n  );\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactListItem\":\"ContactListItem_ContactListItem__IiP-t\",\"Button\":\"ContactListItem_Button__3tpiX\"};"],"sourceRoot":""}